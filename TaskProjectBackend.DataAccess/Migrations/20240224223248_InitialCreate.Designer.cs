// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskProjectBackend.DataAccess;

#nullable disable

namespace TaskProjectBackend.DataAccess.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240224223248_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.PauseSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("WorkSessionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkSessionId");

                    b.ToTable("PauseSessions", (string)null);
                });

            modelBuilder.Entity("Domain.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Tasks", (string)null);
                });

            modelBuilder.Entity("Domain.WorkSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("WorkSessions", (string)null);
                });

            modelBuilder.Entity("Domain.PauseSession", b =>
                {
                    b.HasOne("Domain.WorkSession", "WorkSession")
                        .WithMany("PauseSessions")
                        .HasForeignKey("WorkSessionId");

                    b.Navigation("WorkSession");
                });

            modelBuilder.Entity("Domain.WorkSession", b =>
                {
                    b.HasOne("Domain.Task", "Task")
                        .WithMany("WorkSessions")
                        .HasForeignKey("TaskId");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Domain.Task", b =>
                {
                    b.Navigation("WorkSessions");
                });

            modelBuilder.Entity("Domain.WorkSession", b =>
                {
                    b.Navigation("PauseSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
